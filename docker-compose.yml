version: '3.8'

services:
  account:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: account
    container_name: myrealpet-account
    ports:
      - "8005:8005"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - ACCOUNT_PORT=8005
      - ACCOUNT_DB_URL=jdbc:mysql://${DB_ENDPOINT}:3306/myrealpet_account?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
      - ACCOUNT_DB_USERNAME=${DB_USERNAME}
      - ACCOUNT_DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - PORT=8005
    restart: unless-stopped
    networks:
      - myrealpet-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8005/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pet-walk:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: pet-walk
    container_name: myrealpet-petwalk
    ports:
      - "8002:8002"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PETWALK_PORT=8002
      - PETWALK_DB_URL=jdbc:mysql://${DB_ENDPOINT}:3306/myrealpet_walk?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
      - PETWALK_DB_USERNAME=${DB_USERNAME}
      - PETWALK_DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - KAKAO_API_KEY=${KAKAO_API_KEY}
      - PORT=8002
    restart: unless-stopped
    networks:
      - myrealpet-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sns:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: sns
    container_name: myrealpet-sns
    ports:
      - "8007:8007"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SNS_PORT=8007
      - SNS_DB_URL=jdbc:mysql://${DB_ENDPOINT}:3306/myrealpet_sns?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
      - SNS_DB_USERNAME=${DB_USERNAME}
      - SNS_DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${AWS_SECRET_KEY}
      - CLOUD_AWS_REGION=${AWS_REGION:-ap-northeast-2}
      - CLOUD_AWS_S3_BUCKET=${AWS_S3_BUCKET:-myrealpet}
      - CLOUD_AWS_S3_BASE_URL=${AWS_S3_BASE_URL}
      - PORT=8007
    restart: unless-stopped
    networks:
      - myrealpet-network
    depends_on:
      - account
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8007/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pet-life-cycle:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: pet-life-cycle
    container_name: myrealpet-petlifecycle
    ports:
      - "8003:8003"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PETLIFECYCLE_PORT=8003
      - PETLIFECYCLE_DB_URL=jdbc:mysql://${DB_ENDPOINT}:3306/myrealpet_lifecycle?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
      - PETLIFECYCLE_DB_USERNAME=${DB_USERNAME}
      - PETLIFECYCLE_DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${AWS_SECRET_KEY}
      - CLOUD_AWS_REGION=${AWS_REGION:-ap-northeast-2}
      - CLOUD_AWS_S3_BUCKET=${AWS_S3_BUCKET:-myrealpet}
      - CLOUD_AWS_S3_BASE_URL=${AWS_S3_BASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - OPENAI_URL=${OPENAI_URL:-https://api.openai.com/v1/chat/completions}
      - PORT=8003
    restart: unless-stopped
    networks:
      - myrealpet-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8003/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pet-life-cycle-admin:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: pet-life-cycle/adminApi
    container_name: myrealpet-petlifecycle-admin
    ports:
      - "8100:8100"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PETADMIN_PORT=8100
      - PETLIFECYCLE_DB_URL=jdbc:mysql://${DB_ENDPOINT}:3306/myrealpet_lifecycle?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
      - PETLIFECYCLE_DB_USERNAME=${DB_USERNAME}
      - PETLIFECYCLE_DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${AWS_SECRET_KEY}
      - CLOUD_AWS_REGION=${AWS_REGION:-ap-northeast-2}
      - CLOUD_AWS_S3_BUCKET=${AWS_S3_BUCKET:-myrealpet}
      - CLOUD_AWS_S3_BASE_URL=${AWS_S3_BASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - OPENAI_URL=${OPENAI_URL:-https://api.openai.com/v1/chat/completions}
      - PORT=8100
    restart: unless-stopped
    networks:
      - myrealpet-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8100/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  qna:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: qna
    container_name: myrealpet-qna
    ports:
      - "8004:8004"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - QNA_PORT=8004
      - QNA_DB_URL=jdbc:mysql://${DB_ENDPOINT}:3306/myrealpet_qna?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
      - QNA_DB_USERNAME=${DB_USERNAME}
      - QNA_DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - KAKAO_API_KEY=${KAKAO_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - OPENAI_URL=${OPENAI_URL:-https://api.openai.com/v1/chat/completions}
      - PORT=8004
    restart: unless-stopped
    networks:
      - myrealpet-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8004/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: myrealpet-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - myrealpet-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  myrealpet-network:
    driver: bridge
