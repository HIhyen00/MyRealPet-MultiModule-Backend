server:
  port: ${QNA_PORT:8004}

spring:
  application:
    name: qna-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # MySQL Database Configuration
  datasource:
    url: ${QNA_DB_URL}
    username: ${QNA_DB_USERNAME}
    password: ${QNA_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA Configuration
  jpa:
    database: mysql
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

  cloud:
    aws:
      credentials:
        access-key: ${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
        secret-key: ${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
      region:
        static: ${CLOUD_AWS_REGION}
      s3:
        bucket: ${CLOUD_AWS_S3_BUCKET}
        base-url: ${CLOUD_AWS_S3_BASE_URL}
      stack:
        auto: false

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 20MB

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      model: ${OPENAI_MODEL}
      url: ${OPENAI_URL}

# Application Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

  # Authentication Interceptor Configuration
  auth:
    interceptor:
      enabled: true

  # Kakao API Configuration
  kakao:
    api-key: ${KAKAO_API_KEY}

# Logging
logging:
  level:
    qna: ${LOG_LEVEL:INFO}
    com.myrealpet: ${LOG_LEVEL:INFO}




