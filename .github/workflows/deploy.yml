name: Deploy to EC2 with Self-hosted Runner

on:
  push:
    branches:
      - main

jobs:
  build-account:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Account service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/myrealpet-account:latest
          build-args: |
            SERVICE_NAME=account
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-account:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-account:buildcache,mode=max

  build-petwalk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Pet-Walk service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/myrealpet-petwalk:latest
          build-args: |
            SERVICE_NAME=pet-walk
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-petwalk:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-petwalk:buildcache,mode=max
          
  build-sns:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push SNS service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/myrealpet-sns:latest
          build-args: |
            SERVICE_NAME=sns
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-sns:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-sns:buildcache,mode=max

  build-petlifecycle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Pet-Life-Cycle service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle:latest
          build-args: |
            SERVICE_NAME=pet-life-cycle
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle:buildcache,mode=max

  build-petlifecycle-admin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Pet-Life-Cycle Admin service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle-admin:latest
          build-args: |
            SERVICE_NAME=pet-life-cycle/adminApi
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle-admin:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle-admin:buildcache,mode=max

  build-qna:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push QnA service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/myrealpet-qna:latest
          build-args: |
            SERVICE_NAME=qna
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-qna:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/myrealpet-qna:buildcache,mode=max

  deploy:
    needs: [build-account, build-petwalk, build-sns, build-petlifecycle, build-petlifecycle-admin, build-qna]
    runs-on: self-hosted

    steps:
      - name: Create app directory
        run: |
          mkdir -p /home/ec2-user/app
          cd /home/ec2-user/app

      - name: Create docker-compose file
        run: |
          cd /home/ec2-user/app
          cat > docker-compose.prod.yml << 'EOF'
          version: '3.8'

          services:
            account:
              image: ${{ secrets.DOCKER_USERNAME }}/myrealpet-account:latest
              container_name: myrealpet-account
              ports:
                - "8005:8005"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - ACCOUNT_PORT=8005
                - ACCOUNT_DB_URL=jdbc:mysql://${{ secrets.DB_ENDPOINT }}:3306/myrealpet_account?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
                - ACCOUNT_DB_USERNAME=${{ secrets.DB_USERNAME }}
                - ACCOUNT_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                - REDIS_HOST=redis
                - REDIS_PORT=6379
                - REDIS_PASSWORD=
                - CORS_ALLOWED_ORIGINS=*
                - KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
                - KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
                - PORT=8005
              restart: unless-stopped
              networks:
                - myrealpet-network

            pet-walk:
              image: ${{ secrets.DOCKER_USERNAME }}/myrealpet-petwalk:latest
              container_name: myrealpet-petwalk
              ports:
                - "8002:8002"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - PETWALK_PORT=8002
                - PETWALK_DB_URL=jdbc:mysql://${{ secrets.DB_ENDPOINT }}:3306/myrealpet_walk?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
                - PETWALK_DB_USERNAME=${{ secrets.DB_USERNAME }}
                - PETWALK_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                - REDIS_HOST=redis
                - REDIS_PORT=6379
                - REDIS_PASSWORD=
                - CORS_ALLOWED_ORIGINS=*
                - KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }}
                - PORT=8002
              restart: unless-stopped
              networks:
                - myrealpet-network
            
            sns:
              image: ${{ secrets.DOCKER_USERNAME }}/myrealpet-sns:latest
              container_name: myrealpet-sns
              ports:
                - "8007:8007"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - SNS_DB_URL=jdbc:mysql://${{ secrets.DB_ENDPOINT }}:3306/myrealpet_sns?allowpublickeyretrieval=true&usessl=false&serverTimezone=UTC
                - SNS_DB_USERNAME=${{ secrets.DB_USERNAME }}
                - SNS_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                - REDIS_HOST=redis
                - REDIS_PORT=6379
                - REDIS_PASSWORD=
                - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
                - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
                - CLOUD_AWS_REGION=${{ secrets.AWS_REGION }}
                - CLOUD_AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
                - CLOUD_AWS_S3_BASE_URL=${{ secrets.AWS_S3_BASE_URL }}
                - CORS_ALLOWED_ORIGINS=*
                - LOG_LEVEL=DEBUG
                - SNS_PORT=8007
              restart: unless-stopped
              networks:
                - myrealpet-network

            pet-life-cycle:
              image: ${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle:latest
              container_name: myrealpet-petlifecycle
              ports:
                - "8003:8003"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - PETLIFECYCLE_PORT=8003
                - PETLIFECYCLE_DB_URL=jdbc:mysql://${{ secrets.DB_ENDPOINT }}:3306/myrealpet_lifecycle?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
                - PETLIFECYCLE_DB_USERNAME=${{ secrets.DB_USERNAME }}
                - PETLIFECYCLE_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                - REDIS_HOST=redis
                - REDIS_PORT=6379
                - REDIS_PASSWORD=
                - CORS_ALLOWED_ORIGINS=*
                - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
                - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
                - CLOUD_AWS_REGION=${{ secrets.AWS_REGION }}
                - CLOUD_AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
                - CLOUD_AWS_S3_BASE_URL=${{ secrets.AWS_S3_BASE_URL }}
                - OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
                - OPENAI_MODEL=gpt-4o
                - OPENAI_URL=https://api.openai.com/v1/chat/completions
                - PORT=8003
              restart: unless-stopped
              networks:
                - myrealpet-network

            pet-life-cycle-admin:
              image: ${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle-admin:latest
              container_name: myrealpet-petlifecycle-admin
              ports:
                - "8100:8100"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - PETADMIN_PORT=8100
                - PETLIFECYCLE_DB_URL=jdbc:mysql://${{ secrets.DB_ENDPOINT }}:3306/myrealpet_lifecycle?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
                - PETLIFECYCLE_DB_USERNAME=${{ secrets.DB_USERNAME }}
                - PETLIFECYCLE_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                - REDIS_HOST=redis
                - REDIS_PORT=6379
                - REDIS_PASSWORD=
                - CORS_ALLOWED_ORIGINS=*
                - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
                - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
                - CLOUD_AWS_REGION=${{ secrets.AWS_REGION }}
                - CLOUD_AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
                - CLOUD_AWS_S3_BASE_URL=${{ secrets.AWS_S3_BASE_URL }}
                - OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
                - OPENAI_MODEL=gpt-4o
                - OPENAI_URL=https://api.openai.com/v1/chat/completions
                - PORT=8100
              restart: unless-stopped
              networks:
                - myrealpet-network

            qna:
              image: ${{ secrets.DOCKER_USERNAME }}/myrealpet-qna:latest
              container_name: myrealpet-qna
              ports:
                - "8004:8004"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - QNA_PORT=8004
                - QNA_DB_URL=jdbc:mysql://${{ secrets.DB_ENDPOINT }}:3306/myrealpet_qna?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8
                - QNA_DB_USERNAME=${{ secrets.DB_USERNAME }}
                - QNA_DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                - REDIS_HOST=redis
                - REDIS_PORT=6379
                - REDIS_PASSWORD=
                - CORS_ALLOWED_ORIGINS=*
                - KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }}
                - OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
                - OPENAI_MODEL=gpt-4o
                - OPENAI_URL=https://api.openai.com/v1/chat/completions
                - PORT=8004
              restart: unless-stopped
              networks:
                - myrealpet-network

            redis:
              image: redis:7-alpine
              container_name: myrealpet-redis
              ports:
                - "6379:6379"
              restart: unless-stopped
              networks:
                - myrealpet-network
              healthcheck:
                test: ["CMD", "redis-cli", "ping"]
                interval: 10s
                timeout: 3s
                retries: 3

          networks:
            myrealpet-network:
              driver: bridge
          EOF

      - name: Deploy with Docker Compose
        run: |
          cd /home/ec2-user/app

          # Stop existing containers
          docker-compose -f docker-compose.prod.yml down || true

          # Pull latest images
          docker pull ${{ secrets.DOCKER_USERNAME }}/myrealpet-account:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/myrealpet-petwalk:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/myrealpet-sns:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/myrealpet-petlifecycle-admin:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/myrealpet-qna:latest

          # Start containers
          docker-compose -f docker-compose.prod.yml up -d

          # Clean up unused images
          docker image prune -af || true

          # Show status
          echo "=== Running Containers ==="
          docker ps

          echo "=== Waiting for services to start ==="
          sleep 30

          echo "=== Account Service Logs ==="
          docker logs myrealpet-account --tail=30

          echo "=== Pet-Walk Service Logs ==="
          docker logs myrealpet-petwalk --tail=30

          echo "=== SNS Service Logs ==="
          docker logs myrealpet-sns --tail=30

          echo "=== Pet-Life-Cycle Service Logs ==="
          docker logs myrealpet-petlifecycle --tail=30

          echo "=== Pet-Life-Cycle Admin Service Logs ==="
          docker logs myrealpet-petlifecycle-admin --tail=30

          echo "=== QnA Service Logs ==="
          docker logs myrealpet-qna --tail=30
