name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          cat > .env << EOF
          DB_ENDPOINT=${{ secrets.DB_ENDPOINT }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          REDIS_HOST=localhost
          REDIS_PORT=6379
          REDIS_PASSWORD=
          CORS_ALLOWED_ORIGINS=*
          KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
          KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }}
          EOF

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ".,!.git,!.github"
          target: "/home/ec2-user/app"
          strip_components: 0

      - name: Deploy with Docker Compose on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/app

            # Stop and remove existing containers
            docker-compose down || true

            # Remove old images
            docker image prune -af || true

            # Build and start containers
            docker-compose up -d --build

            # Show running containers
            docker ps

            # Wait for services to be healthy
            echo "Waiting for services to start..."
            sleep 30

            # Check service status
            docker-compose ps

            # Show logs
            echo "=== Account Service Logs ==="
            docker-compose logs --tail=50 account

            echo "=== Pet-Walk Service Logs ==="
            docker-compose logs --tail=50 pet-walk
